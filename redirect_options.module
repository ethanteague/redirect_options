<?php

/**
 * @file
 * Contains redirect_options.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function redirect_options_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the redirect_options module.
    case 'help.page.va_gov_redirect_options':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Adds options to redirects form') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_form_alter().
 */
function redirect_options_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (is_array($form['#attributes']) && array_key_exists('class', $form['#attributes']) && in_array('redirect-form', $form['#attributes']['class'])) {
    $vid = 'type_of_redirect';
    $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid);
    foreach ($terms as $term) {
      $term_data[$term->name] = $term->name;
    }
    $default = 'Server';
    if ($form_id === 'redirect_redirect_edit_form') {
      // Set the form default from previously stored value on edit form.
      $current_path = \Drupal::service('path.current')->getPath();
      $path_args = explode('/', $current_path);

      $db = \Drupal::database();
      $result = $db->select('redirect', 'r')
        ->fields('r')
        ->condition('rid', $path_args[6])
        ->execute()
        ->fetchAll();

      $default = reset($result)->redirect_redirect__title;
    }

    $form['redirect_type'] = [
      '#type' => 'select',
      '#title' => t('Select redirect type'),
      '#options' => $term_data,
      '#default_value' => $default,
    ];

    array_unshift($form['actions']['submit']['#submit'], 'redirect_options_form_alter_submit');
  }
}

/**
 * Form alter callback.
 */
function redirect_options_form_alter_submit(&$form, FormStateInterface $form_state) {
  $type = $form_state->getValue('redirect_type');

  // Store redirect type in unused Title column.
  $form_state->setValue(['redirect_redirect', '0', 'title'], $type);

  $path_raw = $form_state->getValue('redirect_source');
  $path = reset($path_raw)['path'];
  $type = $form_state->getValue('redirect_type');

  // Update the redirect_options table to remain in sync with redirects.
  $db = \Drupal::database();
  $db->upsert('redirect_options')
    ->key(['source'])
    ->fields(['source' => $path, 'type' => $type])->execute();
}
